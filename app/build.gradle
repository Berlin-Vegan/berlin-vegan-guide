apply plugin: 'com.android.application'

android {
    def gitTag = 'git describe --exact HEAD'.execute().text.trim()
    def gitHash = 'git rev-parse --short HEAD'.execute().text.trim()
    def gitBranch = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
    def hasModifiedDeletedOrOtherFiles = !'git ls-files -mdo --exclude-standard'.execute().text.trim().isEmpty()
    def hasStagedFiles = !'git diff-index --no-ext-diff --name-only --cached HEAD'.execute().text.trim().isEmpty()
    def dirtyWorkingCopy = hasModifiedDeletedOrOtherFiles || hasStagedFiles
    def gitDescription = dirtyWorkingCopy ? "${gitHash}-dirty" : gitHash

    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    android {
        useLibrary 'org.apache.http.legacy'
    }
    defaultConfig {
        applicationId "org.berlin_vegan.bvapp_alpha"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 11
        versionName gitTag ?: gitBranch
        if (versionName) {
            buildConfigField "String", "VERSION_GIT_DESCRIPTION", "\"${versionName}-${gitDescription}\""
        } else {
            buildConfigField "String", "VERSION_GIT_DESCRIPTION", "\"empty version name\""
        }
        if (project.hasProperty("sharedSecret")) {
            buildConfigField "String", "SHARED_SECRET", "\"${sharedSecret}\""
        } else {
            buildConfigField "String", "SHARED_SECRET", "\"\""
        }
    }
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            // TODO: find a way to bail out at the beginning of the build process
            variant.assemble.doLast {
                if (!project.hasProperty("sharedSecret")) {
                    throw new InvalidUserDataException("Parameter 'sharedSecret' is mandatory in release builds")
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        playstore {
        }
        foss {
        }
    }

}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'

    compile 'com.google.code.gson:gson:2.3'
    compile 'com.afollestad:material-dialogs:0.7.5.1'
    compile 'ch.acra:acra:4.6.2'
    compile 'com.squareup.picasso:picasso:2.5.2'

    testCompile 'junit:junit:4.12'

    // closed source
    playstoreCompile 'com.google.android.gms:play-services-maps:7.8.0'
}
